{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\Desktop\\\\All Work\\\\next-official-guide\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // import fetch from 'unfetch';\n\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(`/api/randomQuote${query.author ? '?author=' + query.author : ''}&shit=assd`, fetcher);\n  console.log(data, ' ? '); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(React.Fragment, null, __jsx(\"main\", {\n    className: \"jsx-48126279\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-48126279\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-48126279\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }\n  }, \"- \", author))), __jsx(_JSXStyle, {\n    id: \"48126279\",\n    __self: this\n  }, \"main.jsx-48126279{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-48126279{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-48126279{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xc0JDQu9C10LrRgdC10LlcXERlc2t0b3BcXEFsbCBXb3JrXFxuZXh0LW9mZmljaWFsLWd1aWRlXFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0NrQixBQUdxQixBQU9VLEFBT0csVUFiUCxVQU9GLEdBT0EsR0FiSSxRQU9ILEdBT0EsT0FiRyxLQU9FLEdBT3RCLFVBYkEsT0FPQSIsImZpbGUiOiJDOlxcVXNlcnNcXNCQ0LvQtdC60YHQtdC5XFxEZXNrdG9wXFxBbGwgV29ya1xcbmV4dC1vZmZpY2lhbC1ndWlkZVxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL015TGF5b3V0JztcclxuaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJztcclxuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCc7XHJcbi8vIGltcG9ydCBmZXRjaCBmcm9tICd1bmZldGNoJztcclxuaW1wb3J0IHVzZVNXUiBmcm9tICdzd3InO1xyXG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L3JvdXRlcic7XHJcblxyXG5mdW5jdGlvbiBmZXRjaGVyKHVybCkge1xyXG4gIHJldHVybiBmZXRjaCh1cmwpLnRoZW4oKHIpID0+IHIuanNvbigpKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5kZXgoKSB7XHJcbiAgY29uc3QgeyBxdWVyeSB9ID0gdXNlUm91dGVyKCk7XHJcblxyXG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IHVzZVNXUihcclxuICAgIGAvYXBpL3JhbmRvbVF1b3RlJHtcclxuICAgICAgcXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnXHJcbiAgICB9JnNoaXQ9YXNzZGAsXHJcbiAgICBmZXRjaGVyXHJcbiAgKTtcclxuICBjb25zb2xlLmxvZyhkYXRhLCAnID8gJyk7XHJcbiAgLy8gVGhlIGZvbGxvd2luZyBsaW5lIGhhcyBvcHRpb25hbCBjaGFpbmluZywgYWRkZWQgaW4gTmV4dC5qcyB2OS4xLjUsXHJcbiAgLy8gaXMgdGhlIHNhbWUgYXMgYGRhdGEgJiYgZGF0YS5hdXRob3JgXHJcbiAgY29uc3QgYXV0aG9yID0gZGF0YT8uYXV0aG9yO1xyXG4gIGxldCBxdW90ZSA9IGRhdGE/LnF1b3RlO1xyXG4gIGlmICghZGF0YSkgcXVvdGUgPSAnTG9hZGluZy4uLic7XHJcbiAgaWYgKGVycm9yKSBxdW90ZSA9ICdGYWlsZWQgdG8gZmV0Y2ggdGhlIHF1b3RlLic7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8bWFpbiBjbGFzc05hbWU9XCJjZW50ZXJcIj5cclxuICAgICAgICA8PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJxdW90ZVwiPntxdW90ZX08L2Rpdj5cclxuICAgICAgICAgIHthdXRob3IgJiYgPHNwYW4gY2xhc3NOYW1lPVwiYXV0aG9yXCI+LSB7YXV0aG9yfTwvc3Bhbj59XHJcbiAgICAgICAgPC8+XHJcbiAgICAgIDwvbWFpbj5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIG1haW4ge1xyXG4gICAgICAgICAgd2lkdGg6IDkwJTtcclxuICAgICAgICAgIG1heC13aWR0aDogOTAwcHg7XHJcbiAgICAgICAgICBtYXJnaW46IDMwMHB4IGF1dG87XHJcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAucXVvdGUge1xyXG4gICAgICAgICAgZm9udC1mYW1pbHk6IGN1cnNpdmU7XHJcbiAgICAgICAgICBjb2xvcjogI2UyNDNkZTtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmF1dGhvciB7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxuICAgICAgICAgIGNvbG9yOiAjNTU5ODM0O1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufVxyXG5cclxuLy8gY29uc3QgUG9zdExpbmsgPSAocHJvcHMpID0+IChcclxuLy8gICA8bGk+XHJcbi8vICAgICA8TGluayBocmVmPXtgL3AvW2lkXX1gfSBhcz17YC9wLyR7cHJvcHMuaWR9YH0+XHJcbi8vICAgICAgIDxhIHsuLi5wcm9wc30+e3Byb3BzLnRpdGxlfTwvYT5cclxuLy8gICAgIDwvTGluaz5cclxuLy8gICA8L2xpPlxyXG4vLyApO1xyXG5cclxuLy8gY29uc3QgSW5kZXggPSAocHJvcHMpID0+IHtcclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGgxPk15IEJsb2c8L2gxPlxyXG4vLyAgICAgICA8cD5IZWxsbyBOZXh0LmpzPC9wPlxyXG4vLyAgICAgICA8dWw+XHJcbi8vICAgICAgICAgey8qIDxQb3N0TGluayB0aXRsZT1cIkhlbGxvIE5leHQuanNcIiBpZD1cImhlbGxvLW5leHRqc1wiIC8+XHJcbi8vICAgICAgICAgPFBvc3RMaW5rIHRpdGxlPVwiTGVhcm4gTmV4dC5qcyBpcyBhd2Vzb21lXCIgaWQ9XCJsZWFybi1uZXh0anNcIiAvPlxyXG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkRlcGxveSBhcHBzIHdpdGggWmVpdFwiIGlkPVwiZGVwbG95LW5leHRqc1wiIC8+ICovfVxyXG4vLyAgICAgICAgIHtwcm9wcy5zaG93cy5tYXAoKHNob3cpID0+IChcclxuLy8gICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxyXG4vLyAgICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxyXG4vLyAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxyXG4vLyAgICAgICAgICAgICA8L0xpbms+XHJcbi8vICAgICAgICAgICA8L2xpPlxyXG4vLyAgICAgICAgICkpfVxyXG4vLyAgICAgICA8L3VsPlxyXG4vLyAgICAgPC9MYXlvdXQ+XHJcbi8vICAgKTtcclxuLy8gfTtcclxuXHJcbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuLy8gICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcclxuLy8gICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuLy8gICBjb25zb2xlLmxvZyhkYXRhLCBgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xyXG5cclxuLy8gICByZXR1cm4ge1xyXG4vLyAgICAgc2hvd3M6IGRhdGEubWFwKChlbnRyeSkgPT4gZW50cnkuc2hvdyksXHJcbi8vICAgfTtcclxuLy8gfTtcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\\\\\Desktop\\\\\\\\All Work\\\\\\\\next-official-guide\\\\\\\\pages\\\\\\\\index.js */\"));\n} // const PostLink = (props) => (\n//   <li>\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\n//       <a {...props}>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// const Index = (props) => {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <p>Hello Next.js</p>\n//       <ul>\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\n//         {props.shows.map((show) => (\n//           <li key={show.id}>\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//               <a>{show.name}</a>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n// };\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map((entry) => entry.show),\n//   };\n// };","map":{"version":3,"sources":["C:/Users/Алексей/Desktop/All Work/next-official-guide/pages/index.js"],"names":["Layout","Link","fetch","useSWR","useRouter","fetcher","url","then","r","json","Index","query","data","error","author","console","log","quote"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAAvB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYP,SAAS,EAA3B;AAEA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAC3B,mBACCQ,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAC5C,YAH2B,EAI5BT,OAJ4B,CAA9B;AAMAU,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkB,KAAlB,EAT8B,CAU9B;AACA;;AACA,QAAME,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIG,KAAK,GAAGL,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,KAAlB;AACA,MAAI,CAACL,IAAL,EAAWK,KAAK,GAAG,YAAR;AACX,MAAIJ,KAAJ,EAAWI,KAAK,GAAG,4BAAR;AAEX,SACE,4BACE;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,4BACE;AAAA,sCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGH,MAAM,IAAI;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb,CADF,CADF;AAAA;AAAA;AAAA,0lJADF;AA+BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n// import fetch from 'unfetch';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\n\r\nfunction fetcher(url) {\r\n  return fetch(url).then((r) => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n  const { query } = useRouter();\r\n\r\n  const { data, error } = useSWR(\r\n    `/api/randomQuote${\r\n      query.author ? '?author=' + query.author : ''\r\n    }&shit=assd`,\r\n    fetcher\r\n  );\r\n  console.log(data, ' ? ');\r\n  // The following line has optional chaining, added in Next.js v9.1.5,\r\n  // is the same as `data && data.author`\r\n  const author = data?.author;\r\n  let quote = data?.quote;\r\n  if (!data) quote = 'Loading...';\r\n  if (error) quote = 'Failed to fetch the quote.';\r\n\r\n  return (\r\n    <>\r\n      <main className=\"center\">\r\n        <>\r\n          <div className=\"quote\">{quote}</div>\r\n          {author && <span className=\"author\">- {author}</span>}\r\n        </>\r\n      </main>\r\n      <style jsx>{`\r\n        main {\r\n          width: 90%;\r\n          max-width: 900px;\r\n          margin: 300px auto;\r\n          text-align: center;\r\n        }\r\n\r\n        .quote {\r\n          font-family: cursive;\r\n          color: #e243de;\r\n          font-size: 24px;\r\n          padding-bottom: 10px;\r\n        }\r\n\r\n        .author {\r\n          font-family: sans-serif;\r\n          color: #559834;\r\n          font-size: 20px;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n\r\n// const PostLink = (props) => (\r\n//   <li>\r\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\r\n//       <a {...props}>{props.title}</a>\r\n//     </Link>\r\n//   </li>\r\n// );\r\n\r\n// const Index = (props) => {\r\n//   return (\r\n//     <Layout>\r\n//       <h1>My Blog</h1>\r\n//       <p>Hello Next.js</p>\r\n//       <ul>\r\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\r\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\r\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\r\n//         {props.shows.map((show) => (\r\n//           <li key={show.id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n//               <a>{show.name}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// Index.getInitialProps = async function () {\r\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n//   const data = await res.json();\r\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\r\n\r\n//   return {\r\n//     shows: data.map((entry) => entry.show),\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}