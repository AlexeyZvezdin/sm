{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\Desktop\\\\All Work\\\\next-official-guide\\\\pages\\\\p\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/MyLayout';\nimport Link from 'next/link';\n\nvar Post = function Post(props) {\n  console.log(props, ' POST PORPS');\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, props.show.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }\n  }) : null);\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(context, ' WHAT IS context?');\n          id = context.query.id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          show = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Алексей/Desktop/All Work/next-official-guide/pages/p/[id].js"],"names":["useRouter","Layout","Link","Post","props","console","log","show","name","summary","replace","image","medium","getInitialProps","context","id","query","fetch","res","json"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,aAAnB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACG,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGGN,KAAK,CAACG,IAAN,CAAWI,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEP,KAAK,CAACG,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAH9D,CADF;AAOD,CATD;;AAWAT,IAAI,CAACU,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ,EAAqB,mBAArB;AACQC,UAAAA,EAFa,GAEND,OAAO,CAACE,KAFF,CAEbD,EAFa;AAAA;AAAA,2CAGHE,KAAK,wCAAiCF,EAAjC,EAHF;;AAAA;AAGfG,UAAAA,GAHe;AAAA;AAAA,2CAIFA,GAAG,CAACC,IAAJ,EAJE;;AAAA;AAIfZ,UAAAA,IAJe;AAAA,2CAMd;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeJ,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport Layout from '../../components/MyLayout';\r\nimport Link from 'next/link';\r\n\r\nconst Post = (props) => {\r\n  console.log(props, ' POST PORPS');\r\n  return (\r\n    <Layout>\r\n      <h1>{props.show.name}</h1>\r\n      <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\r\n      {props.show.image ? <img src={props.show.image.medium} /> : null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async function (context) {\r\n  console.log(context, ' WHAT IS context?');\r\n  const { id } = context.query;\r\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\r\n  const show = await res.json();\r\n\r\n  return { show };\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}