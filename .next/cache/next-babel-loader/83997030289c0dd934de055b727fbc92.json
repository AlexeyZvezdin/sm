{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\Desktop\\\\All Work\\\\next-official-guide\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // import fetch from 'unfetch';\n\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR(function () {\n    return \"/api/randomQuote\".concat(query.author ? '?author=' + query.author : '');\n  }, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n\n  var author = data === null || data === void 0 ? void 0 : data.author;\n  var quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(React.Fragment, null, __jsx(\"main\", {\n    className: \"jsx-48126279\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-48126279\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Healoo\"), __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-48126279\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-48126279\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }, \"- \", author))), __jsx(_JSXStyle, {\n    id: \"48126279\",\n    __self: this\n  }, \"main.jsx-48126279{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-48126279{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-48126279{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xc0JDQu9C10LrRgdC10LlcXERlc2t0b3BcXEFsbCBXb3JrXFxuZXh0LW9mZmljaWFsLWd1aWRlXFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NrQixBQUdxQixBQU9VLEFBT0csVUFiUCxVQU9GLEdBT0EsR0FiSSxRQU9ILEdBT0EsT0FiRyxLQU9FLEdBT3RCLFVBYkEsT0FPQSIsImZpbGUiOiJDOlxcVXNlcnNcXNCQ0LvQtdC60YHQtdC5XFxEZXNrdG9wXFxBbGwgV29ya1xcbmV4dC1vZmZpY2lhbC1ndWlkZVxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xyXG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAndW5mZXRjaCc7XHJcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5cclxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcclxuICByZXR1cm4gZmV0Y2godXJsKS50aGVuKChyKSA9PiByLmpzb24oKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KCkge1xyXG4gIGNvbnN0IHsgcXVlcnkgfSA9IHVzZVJvdXRlcigpO1xyXG5cclxuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoXHJcbiAgICAoKSA9PiBgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnfWAsXHJcbiAgICBmZXRjaGVyXHJcbiAgKTtcclxuICAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcclxuICAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcclxuICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XHJcbiAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XHJcbiAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcclxuICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxyXG4gICAgICAgIDxoMT5IZWFsb288L2gxPlxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxyXG4gICAgICAgICAge2F1dGhvciAmJiA8c3BhbiBjbGFzc05hbWU9XCJhdXRob3JcIj4tIHthdXRob3J9PC9zcGFuPn1cclxuICAgICAgICA8Lz5cclxuICAgICAgPC9tYWluPlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgbWFpbiB7XHJcbiAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcclxuICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5xdW90ZSB7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcclxuICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYXV0aG9yIHtcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3QgYmFzZV9hcGkgPSBwcm9jZXNzLmVudi5BUEk7XHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYmFzZV9hcGkgKyBgL2FwaS92MS9jaXR5L2RlZmF1bHRgKTtcclxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICBjb25zb2xlLmxvZyhkYXRhLCBgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgc2hvd3M6IGRhdGEubWFwKChlbnRyeSkgPT4gZW50cnkuc2hvdyksXHJcbiAgfTtcclxufTtcclxuXHJcbi8vIGNvbnN0IFBvc3RMaW5rID0gKHByb3BzKSA9PiAoXHJcbi8vICAgPGxpPlxyXG4vLyAgICAgPExpbmsgaHJlZj17YC9wL1tpZF19YH0gYXM9e2AvcC8ke3Byb3BzLmlkfWB9PlxyXG4vLyAgICAgICA8YSB7Li4ucHJvcHN9Pntwcm9wcy50aXRsZX08L2E+XHJcbi8vICAgICA8L0xpbms+XHJcbi8vICAgPC9saT5cclxuLy8gKTtcclxuXHJcbi8vIGNvbnN0IEluZGV4ID0gKHByb3BzKSA9PiB7XHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxMYXlvdXQ+XHJcbi8vICAgICAgIDxoMT5NeSBCbG9nPC9oMT5cclxuLy8gICAgICAgPHA+SGVsbG8gTmV4dC5qczwvcD5cclxuLy8gICAgICAgPHVsPlxyXG4vLyAgICAgICAgIHsvKiA8UG9zdExpbmsgdGl0bGU9XCJIZWxsbyBOZXh0LmpzXCIgaWQ9XCJoZWxsby1uZXh0anNcIiAvPlxyXG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkxlYXJuIE5leHQuanMgaXMgYXdlc29tZVwiIGlkPVwibGVhcm4tbmV4dGpzXCIgLz5cclxuLy8gICAgICAgICA8UG9zdExpbmsgdGl0bGU9XCJEZXBsb3kgYXBwcyB3aXRoIFplaXRcIiBpZD1cImRlcGxveS1uZXh0anNcIiAvPiAqL31cclxuLy8gICAgICAgICB7cHJvcHMuc2hvd3MubWFwKChzaG93KSA9PiAoXHJcbi8vICAgICAgICAgICA8bGkga2V5PXtzaG93LmlkfT5cclxuLy8gICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wL1tpZF1cIiBhcz17YC9wLyR7c2hvdy5pZH1gfT5cclxuLy8gICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cclxuLy8gICAgICAgICAgICAgPC9MaW5rPlxyXG4vLyAgICAgICAgICAgPC9saT5cclxuLy8gICAgICAgICApKX1cclxuLy8gICAgICAgPC91bD5cclxuLy8gICAgIDwvTGF5b3V0PlxyXG4vLyAgICk7XHJcbi8vIH07XHJcblxyXG4vLyBJbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XHJcbi8vICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XHJcbi8vICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XHJcbi8vICAgY29uc29sZS5sb2coZGF0YSwgYFNob3cgZGF0YSBmZXRjaGVkLiBDb3VudDogJHtkYXRhLmxlbmd0aH1gKTtcclxuXHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIHNob3dzOiBkYXRhLm1hcCgoZW50cnkpID0+IGVudHJ5LnNob3cpLFxyXG4vLyAgIH07XHJcbi8vIH07XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\\\\\Desktop\\\\\\\\All Work\\\\\\\\next-official-guide\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nIndex.getInitialProps = function _callee() {\n  var base_api, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          base_api = process.env.API;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(base_api + \"/api/v1/city/default\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          data = _context.sent;\n          console.log(data, \"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; // const PostLink = (props) => (\n//   <li>\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\n//       <a {...props}>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// const Index = (props) => {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <p>Hello Next.js</p>\n//       <ul>\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\n//         {props.shows.map((show) => (\n//           <li key={show.id}>\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//               <a>{show.name}</a>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n// };\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map((entry) => entry.show),\n//   };\n// };","map":{"version":3,"sources":["C:/Users/Алексей/Desktop/All Work/next-official-guide/pages/index.js"],"names":["Layout","Link","fetch","useSWR","useRouter","fetcher","url","then","r","json","Index","query","author","data","error","quote","getInitialProps","base_api","process","env","API","res","console","log","length","shows","map","entry","show"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAgB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAF,EAAP;AAAA,GAAhB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA,mBACZN,SAAS,EADG;AAAA,MACtBO,KADsB,cACtBA,KADsB;;AAAA,gBAGNR,MAAM,CAC5B;AAAA,qCAAyBQ,KAAK,CAACC,MAAN,GAAe,aAAaD,KAAK,CAACC,MAAlC,GAA2C,EAApE;AAAA,GAD4B,EAE5BP,OAF4B,CAHA;AAAA,MAGtBQ,IAHsB,WAGtBA,IAHsB;AAAA,MAGhBC,KAHgB,WAGhBA,KAHgB,EAO9B;AACA;;;AACA,MAAMF,MAAM,GAAGC,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAED,MAArB;AACA,MAAIG,KAAK,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAlB;AACA,MAAI,CAACF,IAAL,EAAWE,KAAK,GAAG,YAAR;AACX,MAAID,KAAJ,EAAWC,KAAK,GAAG,4BAAR;AAEX,SACE,4BACE;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,4BACE;AAAA,sCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGH,MAAM,IAAI;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb,CAFF,CADF;AAAA;AAAA;AAAA,0/JADF;AAgCD;;AAEDF,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,QADgB,GACLC,OAAO,CAACC,GAAR,CAAYC,GADP;AAAA;AAAA,2CAEJlB,KAAK,CAACe,QAAQ,yBAAT,CAFD;;AAAA;AAEhBI,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACZ,IAAJ,EAHG;;AAAA;AAGhBI,UAAAA,IAHgB;AAItBS,UAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,sCAA+CA,IAAI,CAACW,MAApD;AAJsB,2CAMf;AACLC,YAAAA,KAAK,EAAEZ,IAAI,CAACa,GAAL,CAAS,UAACC,KAAD;AAAA,qBAAWA,KAAK,CAACC,IAAjB;AAAA,aAAT;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n// import fetch from 'unfetch';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\n\r\nfunction fetcher(url) {\r\n  return fetch(url).then((r) => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n  const { query } = useRouter();\r\n\r\n  const { data, error } = useSWR(\r\n    () => `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\r\n    fetcher\r\n  );\r\n  // The following line has optional chaining, added in Next.js v9.1.5,\r\n  // is the same as `data && data.author`\r\n  const author = data?.author;\r\n  let quote = data?.quote;\r\n  if (!data) quote = 'Loading...';\r\n  if (error) quote = 'Failed to fetch the quote.';\r\n\r\n  return (\r\n    <>\r\n      <main className=\"center\">\r\n        <h1>Healoo</h1>\r\n        <>\r\n          <div className=\"quote\">{quote}</div>\r\n          {author && <span className=\"author\">- {author}</span>}\r\n        </>\r\n      </main>\r\n      <style jsx>{`\r\n        main {\r\n          width: 90%;\r\n          max-width: 900px;\r\n          margin: 300px auto;\r\n          text-align: center;\r\n        }\r\n\r\n        .quote {\r\n          font-family: cursive;\r\n          color: #e243de;\r\n          font-size: 24px;\r\n          padding-bottom: 10px;\r\n        }\r\n\r\n        .author {\r\n          font-family: sans-serif;\r\n          color: #559834;\r\n          font-size: 20px;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async function () {\r\n  const base_api = process.env.API;\r\n  const res = await fetch(base_api + `/api/v1/city/default`);\r\n  const data = await res.json();\r\n  console.log(data, `Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map((entry) => entry.show),\r\n  };\r\n};\r\n\r\n// const PostLink = (props) => (\r\n//   <li>\r\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\r\n//       <a {...props}>{props.title}</a>\r\n//     </Link>\r\n//   </li>\r\n// );\r\n\r\n// const Index = (props) => {\r\n//   return (\r\n//     <Layout>\r\n//       <h1>My Blog</h1>\r\n//       <p>Hello Next.js</p>\r\n//       <ul>\r\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\r\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\r\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\r\n//         {props.shows.map((show) => (\r\n//           <li key={show.id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n//               <a>{show.name}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// Index.getInitialProps = async function () {\r\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n//   const data = await res.json();\r\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\r\n\r\n//   return {\r\n//     shows: data.map((entry) => entry.show),\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}