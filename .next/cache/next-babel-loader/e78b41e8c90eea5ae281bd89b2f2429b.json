{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\Desktop\\\\All Work\\\\next-official-guide\\\\pages\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'; // import fetch from 'unfetch';\n\nimport useSWR from 'swr';\nimport { useRouter } from 'next/router';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR(() => `/api/randomQuote${query.author ? '?author=' + query.author : ''}`, fetcher); // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.author`\n\n  const author = data === null || data === void 0 ? void 0 : data.author;\n  let quote = data === null || data === void 0 ? void 0 : data.quote;\n  if (!data) quote = 'Loading...';\n  if (error) quote = 'Failed to fetch the quote.';\n  return __jsx(React.Fragment, null, __jsx(\"main\", {\n    className: \"jsx-48126279\" + \" \" + \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-48126279\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Healoo\"), __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-48126279\" + \" \" + \"quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, quote), author && __jsx(\"span\", {\n    className: \"jsx-48126279\" + \" \" + \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }\n  }, \"- \", author))), __jsx(_JSXStyle, {\n    id: \"48126279\",\n    __self: this\n  }, \"main.jsx-48126279{width:90%;max-width:900px;margin:300px auto;text-align:center;}.quote.jsx-48126279{font-family:cursive;color:#e243de;font-size:24px;padding-bottom:10px;}.author.jsx-48126279{font-family:sans-serif;color:#559834;font-size:20px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xc0JDQu9C10LrRgdC10LlcXERlc2t0b3BcXEFsbCBXb3JrXFxuZXh0LW9mZmljaWFsLWd1aWRlXFxwYWdlc1xcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NrQixBQUdxQixBQU9VLEFBT0csVUFiUCxVQU9GLEdBT0EsR0FiSSxRQU9ILEdBT0EsT0FiRyxLQU9FLEdBT3RCLFVBYkEsT0FPQSIsImZpbGUiOiJDOlxcVXNlcnNcXNCQ0LvQtdC60YHQtdC5XFxEZXNrdG9wXFxBbGwgV29ya1xcbmV4dC1vZmZpY2lhbC1ndWlkZVxccGFnZXNcXGluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCBmZXRjaCBmcm9tICdpc29tb3JwaGljLXVuZmV0Y2gnO1xyXG4vLyBpbXBvcnQgZmV0Y2ggZnJvbSAndW5mZXRjaCc7XHJcbmltcG9ydCB1c2VTV1IgZnJvbSAnc3dyJztcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5cclxuZnVuY3Rpb24gZmV0Y2hlcih1cmwpIHtcclxuICByZXR1cm4gZmV0Y2godXJsKS50aGVuKChyKSA9PiByLmpzb24oKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEluZGV4KCkge1xyXG4gIGNvbnN0IHsgcXVlcnkgfSA9IHVzZVJvdXRlcigpO1xyXG5cclxuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSB1c2VTV1IoXHJcbiAgICAoKSA9PiBgL2FwaS9yYW5kb21RdW90ZSR7cXVlcnkuYXV0aG9yID8gJz9hdXRob3I9JyArIHF1ZXJ5LmF1dGhvciA6ICcnfWAsXHJcbiAgICBmZXRjaGVyXHJcbiAgKTtcclxuICAvLyBUaGUgZm9sbG93aW5nIGxpbmUgaGFzIG9wdGlvbmFsIGNoYWluaW5nLCBhZGRlZCBpbiBOZXh0LmpzIHY5LjEuNSxcclxuICAvLyBpcyB0aGUgc2FtZSBhcyBgZGF0YSAmJiBkYXRhLmF1dGhvcmBcclxuICBjb25zdCBhdXRob3IgPSBkYXRhPy5hdXRob3I7XHJcbiAgbGV0IHF1b3RlID0gZGF0YT8ucXVvdGU7XHJcbiAgaWYgKCFkYXRhKSBxdW90ZSA9ICdMb2FkaW5nLi4uJztcclxuICBpZiAoZXJyb3IpIHF1b3RlID0gJ0ZhaWxlZCB0byBmZXRjaCB0aGUgcXVvdGUuJztcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxtYWluIGNsYXNzTmFtZT1cImNlbnRlclwiPlxyXG4gICAgICAgIDxoMT5IZWFsb288L2gxPlxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInF1b3RlXCI+e3F1b3RlfTwvZGl2PlxyXG4gICAgICAgICAge2F1dGhvciAmJiA8c3BhbiBjbGFzc05hbWU9XCJhdXRob3JcIj4tIHthdXRob3J9PC9zcGFuPn1cclxuICAgICAgICA8Lz5cclxuICAgICAgPC9tYWluPlxyXG4gICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgbWFpbiB7XHJcbiAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgbWF4LXdpZHRoOiA5MDBweDtcclxuICAgICAgICAgIG1hcmdpbjogMzAwcHggYXV0bztcclxuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5xdW90ZSB7XHJcbiAgICAgICAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcclxuICAgICAgICAgIGNvbG9yOiAjZTI0M2RlO1xyXG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYXV0aG9yIHtcclxuICAgICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgY29sb3I6ICM1NTk4MzQ7XHJcbiAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8Lz5cclxuICApO1xyXG59XHJcblxyXG5JbmRleC5nZXRJbml0aWFsUHJvcHMgPSBhc3luYyBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3QgZGVmYXVsdENpdHlSZXF1ZXN0ID0gcHJvY2Vzcy5lbnYuQVBJICsgJy9hcGkvdjEvY2l0eS9kZWZhdWx0JztcclxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChkZWZhdWx0Q2l0eVJlcXVlc3QpO1xyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xyXG4gIGNvbnNvbGUubG9nKGRhdGEsIGBTaG93IGRhdGEgZmV0Y2hlZC4gQ291bnQ6ICR7ZGF0YS5sZW5ndGh9YCk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBzaG93czogZGF0YS5tYXAoKGVudHJ5KSA9PiBlbnRyeS5zaG93KSxcclxuICB9O1xyXG59O1xyXG5cclxuLy8gY29uc3QgUG9zdExpbmsgPSAocHJvcHMpID0+IChcclxuLy8gICA8bGk+XHJcbi8vICAgICA8TGluayBocmVmPXtgL3AvW2lkXX1gfSBhcz17YC9wLyR7cHJvcHMuaWR9YH0+XHJcbi8vICAgICAgIDxhIHsuLi5wcm9wc30+e3Byb3BzLnRpdGxlfTwvYT5cclxuLy8gICAgIDwvTGluaz5cclxuLy8gICA8L2xpPlxyXG4vLyApO1xyXG5cclxuLy8gY29uc3QgSW5kZXggPSAocHJvcHMpID0+IHtcclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPExheW91dD5cclxuLy8gICAgICAgPGgxPk15IEJsb2c8L2gxPlxyXG4vLyAgICAgICA8cD5IZWxsbyBOZXh0LmpzPC9wPlxyXG4vLyAgICAgICA8dWw+XHJcbi8vICAgICAgICAgey8qIDxQb3N0TGluayB0aXRsZT1cIkhlbGxvIE5leHQuanNcIiBpZD1cImhlbGxvLW5leHRqc1wiIC8+XHJcbi8vICAgICAgICAgPFBvc3RMaW5rIHRpdGxlPVwiTGVhcm4gTmV4dC5qcyBpcyBhd2Vzb21lXCIgaWQ9XCJsZWFybi1uZXh0anNcIiAvPlxyXG4vLyAgICAgICAgIDxQb3N0TGluayB0aXRsZT1cIkRlcGxveSBhcHBzIHdpdGggWmVpdFwiIGlkPVwiZGVwbG95LW5leHRqc1wiIC8+ICovfVxyXG4vLyAgICAgICAgIHtwcm9wcy5zaG93cy5tYXAoKHNob3cpID0+IChcclxuLy8gICAgICAgICAgIDxsaSBrZXk9e3Nob3cuaWR9PlxyXG4vLyAgICAgICAgICAgICA8TGluayBocmVmPVwiL3AvW2lkXVwiIGFzPXtgL3AvJHtzaG93LmlkfWB9PlxyXG4vLyAgICAgICAgICAgICAgIDxhPntzaG93Lm5hbWV9PC9hPlxyXG4vLyAgICAgICAgICAgICA8L0xpbms+XHJcbi8vICAgICAgICAgICA8L2xpPlxyXG4vLyAgICAgICAgICkpfVxyXG4vLyAgICAgICA8L3VsPlxyXG4vLyAgICAgPC9MYXlvdXQ+XHJcbi8vICAgKTtcclxuLy8gfTtcclxuXHJcbi8vIEluZGV4LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuLy8gICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkudHZtYXplLmNvbS9zZWFyY2gvc2hvd3M/cT1iYXRtYW4nKTtcclxuLy8gICBjb25zdCBkYXRhID0gYXdhaXQgcmVzLmpzb24oKTtcclxuLy8gICBjb25zb2xlLmxvZyhkYXRhLCBgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xyXG5cclxuLy8gICByZXR1cm4ge1xyXG4vLyAgICAgc2hvd3M6IGRhdGEubWFwKChlbnRyeSkgPT4gZW50cnkuc2hvdyksXHJcbi8vICAgfTtcclxuLy8gfTtcclxuIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\\\u0410\\u043B\\u0435\\u043A\\u0441\\u0435\\u0439\\\\\\\\Desktop\\\\\\\\All Work\\\\\\\\next-official-guide\\\\\\\\pages\\\\\\\\index.js */\"));\n}\n\nIndex.getInitialProps = async function () {\n  const defaultCityRequest = process.env.API + '/api/v1/city/default';\n  const res = await fetch(defaultCityRequest);\n  const data = await res.json();\n  console.log(data, `Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n}; // const PostLink = (props) => (\n//   <li>\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\n//       <a {...props}>{props.title}</a>\n//     </Link>\n//   </li>\n// );\n// const Index = (props) => {\n//   return (\n//     <Layout>\n//       <h1>My Blog</h1>\n//       <p>Hello Next.js</p>\n//       <ul>\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\n//         {props.shows.map((show) => (\n//           <li key={show.id}>\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//               <a>{show.name}</a>\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n// };\n// Index.getInitialProps = async function () {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map((entry) => entry.show),\n//   };\n// };","map":{"version":3,"sources":["C:/Users/Алексей/Desktop/All Work/next-official-guide/pages/index.js"],"names":["Layout","Link","fetch","useSWR","useRouter","fetcher","url","then","r","json","Index","query","data","error","author","quote","getInitialProps","defaultCityRequest","process","env","API","res","console","log","length","shows","map","entry","show"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOJ,KAAK,CAACI,GAAD,CAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,IAAF,EAAvB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYP,SAAS,EAA3B;AAEA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAC5B,MAAO,mBAAkBQ,KAAK,CAACG,MAAN,GAAe,aAAaH,KAAK,CAACG,MAAlC,GAA2C,EAAG,EAD3C,EAE5BT,OAF4B,CAA9B,CAH8B,CAO9B;AACA;;AACA,QAAMS,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;AACA,MAAIC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAAlB;AACA,MAAI,CAACH,IAAL,EAAWG,KAAK,GAAG,YAAR;AACX,MAAIF,KAAJ,EAAWE,KAAK,GAAG,4BAAR;AAEX,SACE,4BACE;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,4BACE;AAAA,sCAAe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,KAAxB,CADF,EAEGD,MAAM,IAAI;AAAA,sCAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BA,MAA5B,CAFb,CAFF,CADF;AAAA;AAAA;AAAA,khKADF;AAgCD;;AAEDJ,KAAK,CAACM,eAAN,GAAwB,kBAAkB;AACxC,QAAMC,kBAAkB,GAAGC,OAAO,CAACC,GAAR,CAAYC,GAAZ,GAAkB,sBAA7C;AACA,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACe,kBAAD,CAAvB;AACA,QAAML,IAAI,GAAG,MAAMS,GAAG,CAACZ,IAAJ,EAAnB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAAmB,6BAA4BA,IAAI,CAACY,MAAO,EAA3D;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEb,IAAI,CAACc,GAAL,CAAUC,KAAD,IAAWA,KAAK,CAACC,IAA1B;AADF,GAAP;AAGD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import Layout from '../components/Layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n// import fetch from 'unfetch';\r\nimport useSWR from 'swr';\r\nimport { useRouter } from 'next/router';\r\n\r\nfunction fetcher(url) {\r\n  return fetch(url).then((r) => r.json());\r\n}\r\n\r\nexport default function Index() {\r\n  const { query } = useRouter();\r\n\r\n  const { data, error } = useSWR(\r\n    () => `/api/randomQuote${query.author ? '?author=' + query.author : ''}`,\r\n    fetcher\r\n  );\r\n  // The following line has optional chaining, added in Next.js v9.1.5,\r\n  // is the same as `data && data.author`\r\n  const author = data?.author;\r\n  let quote = data?.quote;\r\n  if (!data) quote = 'Loading...';\r\n  if (error) quote = 'Failed to fetch the quote.';\r\n\r\n  return (\r\n    <>\r\n      <main className=\"center\">\r\n        <h1>Healoo</h1>\r\n        <>\r\n          <div className=\"quote\">{quote}</div>\r\n          {author && <span className=\"author\">- {author}</span>}\r\n        </>\r\n      </main>\r\n      <style jsx>{`\r\n        main {\r\n          width: 90%;\r\n          max-width: 900px;\r\n          margin: 300px auto;\r\n          text-align: center;\r\n        }\r\n\r\n        .quote {\r\n          font-family: cursive;\r\n          color: #e243de;\r\n          font-size: 24px;\r\n          padding-bottom: 10px;\r\n        }\r\n\r\n        .author {\r\n          font-family: sans-serif;\r\n          color: #559834;\r\n          font-size: 20px;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async function () {\r\n  const defaultCityRequest = process.env.API + '/api/v1/city/default';\r\n  const res = await fetch(defaultCityRequest);\r\n  const data = await res.json();\r\n  console.log(data, `Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map((entry) => entry.show),\r\n  };\r\n};\r\n\r\n// const PostLink = (props) => (\r\n//   <li>\r\n//     <Link href={`/p/[id]}`} as={`/p/${props.id}`}>\r\n//       <a {...props}>{props.title}</a>\r\n//     </Link>\r\n//   </li>\r\n// );\r\n\r\n// const Index = (props) => {\r\n//   return (\r\n//     <Layout>\r\n//       <h1>My Blog</h1>\r\n//       <p>Hello Next.js</p>\r\n//       <ul>\r\n//         {/* <PostLink title=\"Hello Next.js\" id=\"hello-nextjs\" />\r\n//         <PostLink title=\"Learn Next.js is awesome\" id=\"learn-nextjs\" />\r\n//         <PostLink title=\"Deploy apps with Zeit\" id=\"deploy-nextjs\" /> */}\r\n//         {props.shows.map((show) => (\r\n//           <li key={show.id}>\r\n//             <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n//               <a>{show.name}</a>\r\n//             </Link>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// Index.getInitialProps = async function () {\r\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n//   const data = await res.json();\r\n//   console.log(data, `Show data fetched. Count: ${data.length}`);\r\n\r\n//   return {\r\n//     shows: data.map((entry) => entry.show),\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}